<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>at.ct.mock</groupId>
    <artifactId>ct-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Commerce Tools Mock</description>
    <properties>
        <java.version>21</java.version>
        <spring-boot.version>3.2.5</spring-boot.version>
        <commercetools.version>19.4.0</commercetools.version>
        <testcontainers.version>1.20.2</testcontainers.version>
    </properties>
    <dependencies>
        <!-- Spring Boot Core -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Web (REST controllers, API endpoints, etc.) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Configuration Processor (for @ConfigurationProperties) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Logging (comes with starter, but SLF4J API is handy) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Commercetools Java SDK (API + Import API + HTTP Client) -->
        <dependency>
            <groupId>com.commercetools.sdk</groupId>
            <artifactId>commercetools-http-client</artifactId>
            <version>${commercetools.version}</version>
        </dependency>
        <dependency>
            <groupId>com.commercetools.sdk</groupId>
            <artifactId>commercetools-sdk-java-api</artifactId>
            <version>${commercetools.version}</version>
        </dependency>
        <dependency>
            <groupId>com.commercetools.sdk</groupId>
            <artifactId>commercetools-sdk-java-importapi</artifactId>
            <version>${commercetools.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Jupiter API & Engine (comes with Spring Boot Starter Test) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Testcontainers: for running the Node Mock server inside tests -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.7</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
            <version>2.8.13</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.8.13</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.0.1</version>
                <executions>
                    <execution>
                        <id>generate-java-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Path to your OpenAPI spec -->
                            <inputSpec>${project.basedir}/src/main/resources/static/customer-api.yaml</inputSpec>

                            <!-- Output directory for generated client -->
                            <output>${project.build.directory}/generated-sources/customer-client</output>

                            <!-- Generate Java client -->
                            <generatorName>java</generatorName>

                            <!-- Use Spring RestTemplate for integration with Spring Boot -->
                            <library>resttemplate</library>

                            <!-- Package for the generated classes -->
                            <apiPackage>at.ct.mock.demo.client.api</apiPackage>
                            <modelPackage>at.ct.mock.demo.client.model</modelPackage>
                            <invokerPackage>at.ct.mock.demo.client</invokerPackage>
                            <configOptions>
                                <!-- Important: this is the correct flag -->
                                <useJakartaEe>true</useJakartaEe>
                            </configOptions>
                            <additionalProperties>
                                <useJakartaAnnotations>true</useJakartaAnnotations>
                                <useJUnit5>true</useJUnit5>
                            </additionalProperties>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Add this plugin to tell Maven to include generated sources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/customer-client/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
